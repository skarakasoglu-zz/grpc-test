// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calculatorpb/calculator.proto

package calculatorpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumRequest struct {
	Num1                 int32    `protobuf:"zigzag32,1,opt,name=num1,proto3" json:"num1,omitempty"`
	Num2                 int32    `protobuf:"zigzag32,2,opt,name=num2,proto3" json:"num2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetNum1() int32 {
	if m != nil {
		return m.Num1
	}
	return 0
}

func (m *SumRequest) GetNum2() int32 {
	if m != nil {
		return m.Num2
	}
	return 0
}

type SumResponse struct {
	Result               int32    `protobuf:"zigzag32,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{1}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type CalculatePrimeNumberDecompositionRequest struct {
	Number               int32    `protobuf:"zigzag32,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculatePrimeNumberDecompositionRequest) Reset() {
	*m = CalculatePrimeNumberDecompositionRequest{}
}
func (m *CalculatePrimeNumberDecompositionRequest) String() string { return proto.CompactTextString(m) }
func (*CalculatePrimeNumberDecompositionRequest) ProtoMessage()    {}
func (*CalculatePrimeNumberDecompositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{2}
}

func (m *CalculatePrimeNumberDecompositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculatePrimeNumberDecompositionRequest.Unmarshal(m, b)
}
func (m *CalculatePrimeNumberDecompositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculatePrimeNumberDecompositionRequest.Marshal(b, m, deterministic)
}
func (m *CalculatePrimeNumberDecompositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculatePrimeNumberDecompositionRequest.Merge(m, src)
}
func (m *CalculatePrimeNumberDecompositionRequest) XXX_Size() int {
	return xxx_messageInfo_CalculatePrimeNumberDecompositionRequest.Size(m)
}
func (m *CalculatePrimeNumberDecompositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculatePrimeNumberDecompositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalculatePrimeNumberDecompositionRequest proto.InternalMessageInfo

func (m *CalculatePrimeNumberDecompositionRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type CalculatePrimeNumberDecompositionResponse struct {
	PrimeNumber          int32    `protobuf:"zigzag32,1,opt,name=prime_number,json=primeNumber,proto3" json:"prime_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculatePrimeNumberDecompositionResponse) Reset() {
	*m = CalculatePrimeNumberDecompositionResponse{}
}
func (m *CalculatePrimeNumberDecompositionResponse) String() string { return proto.CompactTextString(m) }
func (*CalculatePrimeNumberDecompositionResponse) ProtoMessage()    {}
func (*CalculatePrimeNumberDecompositionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{3}
}

func (m *CalculatePrimeNumberDecompositionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculatePrimeNumberDecompositionResponse.Unmarshal(m, b)
}
func (m *CalculatePrimeNumberDecompositionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculatePrimeNumberDecompositionResponse.Marshal(b, m, deterministic)
}
func (m *CalculatePrimeNumberDecompositionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculatePrimeNumberDecompositionResponse.Merge(m, src)
}
func (m *CalculatePrimeNumberDecompositionResponse) XXX_Size() int {
	return xxx_messageInfo_CalculatePrimeNumberDecompositionResponse.Size(m)
}
func (m *CalculatePrimeNumberDecompositionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculatePrimeNumberDecompositionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalculatePrimeNumberDecompositionResponse proto.InternalMessageInfo

func (m *CalculatePrimeNumberDecompositionResponse) GetPrimeNumber() int32 {
	if m != nil {
		return m.PrimeNumber
	}
	return 0
}

type ComputeAverageRequest struct {
	Number               int32    `protobuf:"zigzag32,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputeAverageRequest) Reset()         { *m = ComputeAverageRequest{} }
func (m *ComputeAverageRequest) String() string { return proto.CompactTextString(m) }
func (*ComputeAverageRequest) ProtoMessage()    {}
func (*ComputeAverageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{4}
}

func (m *ComputeAverageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeAverageRequest.Unmarshal(m, b)
}
func (m *ComputeAverageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeAverageRequest.Marshal(b, m, deterministic)
}
func (m *ComputeAverageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeAverageRequest.Merge(m, src)
}
func (m *ComputeAverageRequest) XXX_Size() int {
	return xxx_messageInfo_ComputeAverageRequest.Size(m)
}
func (m *ComputeAverageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeAverageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeAverageRequest proto.InternalMessageInfo

func (m *ComputeAverageRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type ComputeAverageResponse struct {
	Average              float32  `protobuf:"fixed32,1,opt,name=average,proto3" json:"average,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputeAverageResponse) Reset()         { *m = ComputeAverageResponse{} }
func (m *ComputeAverageResponse) String() string { return proto.CompactTextString(m) }
func (*ComputeAverageResponse) ProtoMessage()    {}
func (*ComputeAverageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{5}
}

func (m *ComputeAverageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeAverageResponse.Unmarshal(m, b)
}
func (m *ComputeAverageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeAverageResponse.Marshal(b, m, deterministic)
}
func (m *ComputeAverageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeAverageResponse.Merge(m, src)
}
func (m *ComputeAverageResponse) XXX_Size() int {
	return xxx_messageInfo_ComputeAverageResponse.Size(m)
}
func (m *ComputeAverageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeAverageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeAverageResponse proto.InternalMessageInfo

func (m *ComputeAverageResponse) GetAverage() float32 {
	if m != nil {
		return m.Average
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "calculator.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calculator.SumResponse")
	proto.RegisterType((*CalculatePrimeNumberDecompositionRequest)(nil), "calculator.CalculatePrimeNumberDecompositionRequest")
	proto.RegisterType((*CalculatePrimeNumberDecompositionResponse)(nil), "calculator.CalculatePrimeNumberDecompositionResponse")
	proto.RegisterType((*ComputeAverageRequest)(nil), "calculator.ComputeAverageRequest")
	proto.RegisterType((*ComputeAverageResponse)(nil), "calculator.ComputeAverageResponse")
}

func init() {
	proto.RegisterFile("calculator/calculatorpb/calculator.proto", fileDescriptor_7f42938f8c8365cf)
}

var fileDescriptor_7f42938f8c8365cf = []byte{
	// 309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x41, 0x4b, 0xf3, 0x40,
	0x14, 0xfc, 0xd2, 0x4f, 0x2a, 0xbc, 0x96, 0x42, 0x17, 0x8c, 0x21, 0x27, 0xb3, 0x20, 0xc4, 0x4b,
	0xab, 0xb1, 0x82, 0x57, 0x1b, 0xcf, 0x45, 0x92, 0x9b, 0x1e, 0x24, 0x09, 0x0f, 0x09, 0x64, 0xb3,
	0xeb, 0x66, 0xb7, 0xbf, 0xc4, 0x3f, 0xe4, 0x3f, 0x13, 0x93, 0x4d, 0x93, 0xa8, 0xd8, 0x7a, 0xdb,
	0x99, 0xbc, 0x99, 0x79, 0x4c, 0x1e, 0xf8, 0x59, 0x52, 0x64, 0xba, 0x48, 0x14, 0x97, 0xcb, 0xee,
	0x29, 0xd2, 0x1e, 0x58, 0x08, 0xc9, 0x15, 0x27, 0xd0, 0x31, 0x74, 0x05, 0x10, 0x6b, 0x16, 0xe1,
	0xab, 0xc6, 0x4a, 0x11, 0x02, 0x47, 0xa5, 0x66, 0x57, 0x8e, 0x75, 0x66, 0xf9, 0xf3, 0xa8, 0x7e,
	0x1b, 0x2e, 0x70, 0x46, 0x3b, 0x2e, 0xa0, 0xe7, 0x30, 0xa9, 0x55, 0x95, 0xe0, 0x65, 0x85, 0xc4,
	0x86, 0xb1, 0xc4, 0x4a, 0x17, 0xca, 0x08, 0x0d, 0xa2, 0x6b, 0xf0, 0x43, 0x13, 0x85, 0x0f, 0x32,
	0x67, 0xb8, 0xd1, 0x2c, 0x45, 0x79, 0x8f, 0x19, 0x67, 0x82, 0x57, 0xb9, 0xca, 0x79, 0xd9, 0x46,
	0xdb, 0x30, 0x2e, 0xeb, 0xaf, 0xad, 0x47, 0x83, 0xe8, 0x06, 0x2e, 0x0e, 0xf0, 0x30, 0x8b, 0x78,
	0x30, 0x15, 0x9f, 0x33, 0xcf, 0x03, 0xab, 0x89, 0xe8, 0x74, 0x74, 0x09, 0x27, 0x21, 0x67, 0x42,
	0x2b, 0xbc, 0xdb, 0xa2, 0x4c, 0x5e, 0x70, 0xdf, 0x02, 0x01, 0xd8, 0x5f, 0x05, 0x26, 0xcd, 0x81,
	0xe3, 0xa4, 0xa1, 0x6a, 0xc9, 0x28, 0x6a, 0x61, 0xf0, 0x3e, 0x82, 0x79, 0xb8, 0x2b, 0x39, 0x46,
	0xb9, 0xcd, 0x33, 0x24, 0xb7, 0xf0, 0x3f, 0xd6, 0x8c, 0xd8, 0x8b, 0xde, 0x1f, 0xe9, 0xca, 0x77,
	0x4f, 0xbf, 0xf1, 0x4d, 0x0e, 0xfd, 0x47, 0xde, 0x2c, 0xf0, 0xf6, 0xb6, 0x40, 0x56, 0x7d, 0x83,
	0x43, 0x8b, 0x77, 0x6f, 0xfe, 0xa8, 0x6a, 0x97, 0xba, 0xb4, 0xc8, 0x13, 0xcc, 0x86, 0xd5, 0x10,
	0x6f, 0x60, 0xf6, 0x53, 0xcf, 0x2e, 0xfd, 0x6d, 0xa4, 0x35, 0xf7, 0xad, 0xf5, 0xec, 0x71, 0xda,
	0x3f, 0xe3, 0x74, 0x5c, 0x1f, 0xef, 0xf5, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0x30, 0x6b, 0xf3,
	0x64, 0xe8, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculatorServiceClient is the client API for CalculatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorServiceClient interface {
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	CalculatePrimeNumberDecomposition(ctx context.Context, in *CalculatePrimeNumberDecompositionRequest, opts ...grpc.CallOption) (CalculatorService_CalculatePrimeNumberDecompositionClient, error)
	ComputeAverage(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_ComputeAverageClient, error)
}

type calculatorServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculatorServiceClient(cc *grpc.ClientConn) CalculatorServiceClient {
	return &calculatorServiceClient{cc}
}

func (c *calculatorServiceClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) CalculatePrimeNumberDecomposition(ctx context.Context, in *CalculatePrimeNumberDecompositionRequest, opts ...grpc.CallOption) (CalculatorService_CalculatePrimeNumberDecompositionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[0], "/calculator.CalculatorService/CalculatePrimeNumberDecomposition", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceCalculatePrimeNumberDecompositionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculatorService_CalculatePrimeNumberDecompositionClient interface {
	Recv() (*CalculatePrimeNumberDecompositionResponse, error)
	grpc.ClientStream
}

type calculatorServiceCalculatePrimeNumberDecompositionClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceCalculatePrimeNumberDecompositionClient) Recv() (*CalculatePrimeNumberDecompositionResponse, error) {
	m := new(CalculatePrimeNumberDecompositionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) ComputeAverage(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_ComputeAverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[1], "/calculator.CalculatorService/ComputeAverage", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceComputeAverageClient{stream}
	return x, nil
}

type CalculatorService_ComputeAverageClient interface {
	Send(*ComputeAverageRequest) error
	CloseAndRecv() (*ComputeAverageResponse, error)
	grpc.ClientStream
}

type calculatorServiceComputeAverageClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceComputeAverageClient) Send(m *ComputeAverageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorServiceComputeAverageClient) CloseAndRecv() (*ComputeAverageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ComputeAverageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalculatorServiceServer is the server API for CalculatorService service.
type CalculatorServiceServer interface {
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	CalculatePrimeNumberDecomposition(*CalculatePrimeNumberDecompositionRequest, CalculatorService_CalculatePrimeNumberDecompositionServer) error
	ComputeAverage(CalculatorService_ComputeAverageServer) error
}

// UnimplementedCalculatorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServiceServer struct {
}

func (*UnimplementedCalculatorServiceServer) Sum(ctx context.Context, req *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedCalculatorServiceServer) CalculatePrimeNumberDecomposition(req *CalculatePrimeNumberDecompositionRequest, srv CalculatorService_CalculatePrimeNumberDecompositionServer) error {
	return status.Errorf(codes.Unimplemented, "method CalculatePrimeNumberDecomposition not implemented")
}
func (*UnimplementedCalculatorServiceServer) ComputeAverage(srv CalculatorService_ComputeAverageServer) error {
	return status.Errorf(codes.Unimplemented, "method ComputeAverage not implemented")
}

func RegisterCalculatorServiceServer(s *grpc.Server, srv CalculatorServiceServer) {
	s.RegisterService(&_CalculatorService_serviceDesc, srv)
}

func _CalculatorService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_CalculatePrimeNumberDecomposition_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CalculatePrimeNumberDecompositionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServiceServer).CalculatePrimeNumberDecomposition(m, &calculatorServiceCalculatePrimeNumberDecompositionServer{stream})
}

type CalculatorService_CalculatePrimeNumberDecompositionServer interface {
	Send(*CalculatePrimeNumberDecompositionResponse) error
	grpc.ServerStream
}

type calculatorServiceCalculatePrimeNumberDecompositionServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceCalculatePrimeNumberDecompositionServer) Send(m *CalculatePrimeNumberDecompositionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CalculatorService_ComputeAverage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServiceServer).ComputeAverage(&calculatorServiceComputeAverageServer{stream})
}

type CalculatorService_ComputeAverageServer interface {
	SendAndClose(*ComputeAverageResponse) error
	Recv() (*ComputeAverageRequest, error)
	grpc.ServerStream
}

type calculatorServiceComputeAverageServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceComputeAverageServer) SendAndClose(m *ComputeAverageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorServiceComputeAverageServer) Recv() (*ComputeAverageRequest, error) {
	m := new(ComputeAverageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CalculatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculatorService",
	HandlerType: (*CalculatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _CalculatorService_Sum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CalculatePrimeNumberDecomposition",
			Handler:       _CalculatorService_CalculatePrimeNumberDecomposition_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ComputeAverage",
			Handler:       _CalculatorService_ComputeAverage_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "calculator/calculatorpb/calculator.proto",
}
